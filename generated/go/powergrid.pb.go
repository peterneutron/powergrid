// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: powergrid.proto

// The package path should reflect your module structure.

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PowerFeature int32

const (
	PowerFeature_POWER_FEATURE_UNSPECIFIED PowerFeature = 0
	PowerFeature_PREVENT_DISPLAY_SLEEP     PowerFeature = 1
	PowerFeature_PREVENT_SYSTEM_SLEEP      PowerFeature = 2
	PowerFeature_FORCE_DISCHARGE           PowerFeature = 3
)

// Enum value maps for PowerFeature.
var (
	PowerFeature_name = map[int32]string{
		0: "POWER_FEATURE_UNSPECIFIED",
		1: "PREVENT_DISPLAY_SLEEP",
		2: "PREVENT_SYSTEM_SLEEP",
		3: "FORCE_DISCHARGE",
	}
	PowerFeature_value = map[string]int32{
		"POWER_FEATURE_UNSPECIFIED": 0,
		"PREVENT_DISPLAY_SLEEP":     1,
		"PREVENT_SYSTEM_SLEEP":      2,
		"FORCE_DISCHARGE":           3,
	}
)

func (x PowerFeature) Enum() *PowerFeature {
	p := new(PowerFeature)
	*p = x
	return p
}

func (x PowerFeature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerFeature) Descriptor() protoreflect.EnumDescriptor {
	return file_powergrid_proto_enumTypes[0].Descriptor()
}

func (PowerFeature) Type() protoreflect.EnumType {
	return &file_powergrid_proto_enumTypes[0]
}

func (x PowerFeature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PowerFeature.Descriptor instead.
func (PowerFeature) EnumDescriptor() ([]byte, []int) {
	return file_powergrid_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_powergrid_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_powergrid_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_powergrid_proto_rawDescGZIP(), []int{0}
}

type StatusResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CurrentCharge      int32                  `protobuf:"varint,1,opt,name=current_charge,json=currentCharge,proto3" json:"current_charge,omitempty"`
	IsCharging         bool                   `protobuf:"varint,2,opt,name=is_charging,json=isCharging,proto3" json:"is_charging,omitempty"`
	IsConnected        bool                   `protobuf:"varint,3,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	ChargeLimit        int32                  `protobuf:"varint,4,opt,name=charge_limit,json=chargeLimit,proto3" json:"charge_limit,omitempty"`
	IsChargeLimited    bool                   `protobuf:"varint,5,opt,name=is_charge_limited,json=isChargeLimited,proto3" json:"is_charge_limited,omitempty"` // True if the daemon is actively inhibiting charge.
	CycleCount         int32                  `protobuf:"varint,6,opt,name=cycle_count,json=cycleCount,proto3" json:"cycle_count,omitempty"`
	AdapterDescription string                 `protobuf:"bytes,7,opt,name=adapter_description,json=adapterDescription,proto3" json:"adapter_description,omitempty"`
	BatteryWattage     float32                `protobuf:"fixed32,8,opt,name=battery_wattage,json=batteryWattage,proto3" json:"battery_wattage,omitempty"`
	AdapterWattage     float32                `protobuf:"fixed32,9,opt,name=adapter_wattage,json=adapterWattage,proto3" json:"adapter_wattage,omitempty"`
	SystemWattage      float32                `protobuf:"fixed32,10,opt,name=system_wattage,json=systemWattage,proto3" json:"system_wattage,omitempty"`
	// Added fields
	HealthByMax               int32   `protobuf:"varint,11,opt,name=health_by_max,json=healthByMax,proto3" json:"health_by_max,omitempty"`                                             // IOKit.Calculations.HealthByMaxCapacity
	AdapterInputVoltage       float32 `protobuf:"fixed32,12,opt,name=adapter_input_voltage,json=adapterInputVoltage,proto3" json:"adapter_input_voltage,omitempty"`                    // IOKit.Adapter.InputVoltage (V)
	AdapterInputAmperage      float32 `protobuf:"fixed32,13,opt,name=adapter_input_amperage,json=adapterInputAmperage,proto3" json:"adapter_input_amperage,omitempty"`                 // IOKit.Adapter.InputAmperage (A)
	PreventDisplaySleepActive bool    `protobuf:"varint,14,opt,name=prevent_display_sleep_active,json=preventDisplaySleepActive,proto3" json:"prevent_display_sleep_active,omitempty"` // Assertion active in this process
	PreventSystemSleepActive  bool    `protobuf:"varint,15,opt,name=prevent_system_sleep_active,json=preventSystemSleepActive,proto3" json:"prevent_system_sleep_active,omitempty"`    // Assertion active in this process
	ForceDischargeActive      bool    `protobuf:"varint,16,opt,name=force_discharge_active,json=forceDischargeActive,proto3" json:"force_discharge_active,omitempty"`                  // Adapter disabled via SMC
	// SMC ground-truth bits for precise UI mapping
	SmcChargingEnabled bool `protobuf:"varint,17,opt,name=smc_charging_enabled,json=smcChargingEnabled,proto3" json:"smc_charging_enabled,omitempty"` // SMC.State.IsChargingEnabled
	SmcAdapterEnabled  bool `protobuf:"varint,18,opt,name=smc_adapter_enabled,json=smcAdapterEnabled,proto3" json:"smc_adapter_enabled,omitempty"`    // SMC.State.IsAdapterEnabled
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_powergrid_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_powergrid_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_powergrid_proto_rawDescGZIP(), []int{1}
}

func (x *StatusResponse) GetCurrentCharge() int32 {
	if x != nil {
		return x.CurrentCharge
	}
	return 0
}

func (x *StatusResponse) GetIsCharging() bool {
	if x != nil {
		return x.IsCharging
	}
	return false
}

func (x *StatusResponse) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *StatusResponse) GetChargeLimit() int32 {
	if x != nil {
		return x.ChargeLimit
	}
	return 0
}

func (x *StatusResponse) GetIsChargeLimited() bool {
	if x != nil {
		return x.IsChargeLimited
	}
	return false
}

func (x *StatusResponse) GetCycleCount() int32 {
	if x != nil {
		return x.CycleCount
	}
	return 0
}

func (x *StatusResponse) GetAdapterDescription() string {
	if x != nil {
		return x.AdapterDescription
	}
	return ""
}

func (x *StatusResponse) GetBatteryWattage() float32 {
	if x != nil {
		return x.BatteryWattage
	}
	return 0
}

func (x *StatusResponse) GetAdapterWattage() float32 {
	if x != nil {
		return x.AdapterWattage
	}
	return 0
}

func (x *StatusResponse) GetSystemWattage() float32 {
	if x != nil {
		return x.SystemWattage
	}
	return 0
}

func (x *StatusResponse) GetHealthByMax() int32 {
	if x != nil {
		return x.HealthByMax
	}
	return 0
}

func (x *StatusResponse) GetAdapterInputVoltage() float32 {
	if x != nil {
		return x.AdapterInputVoltage
	}
	return 0
}

func (x *StatusResponse) GetAdapterInputAmperage() float32 {
	if x != nil {
		return x.AdapterInputAmperage
	}
	return 0
}

func (x *StatusResponse) GetPreventDisplaySleepActive() bool {
	if x != nil {
		return x.PreventDisplaySleepActive
	}
	return false
}

func (x *StatusResponse) GetPreventSystemSleepActive() bool {
	if x != nil {
		return x.PreventSystemSleepActive
	}
	return false
}

func (x *StatusResponse) GetForceDischargeActive() bool {
	if x != nil {
		return x.ForceDischargeActive
	}
	return false
}

func (x *StatusResponse) GetSmcChargingEnabled() bool {
	if x != nil {
		return x.SmcChargingEnabled
	}
	return false
}

func (x *StatusResponse) GetSmcAdapterEnabled() bool {
	if x != nil {
		return x.SmcAdapterEnabled
	}
	return false
}

type SetChargeLimitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // The new charge limit, e.g., 80.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetChargeLimitRequest) Reset() {
	*x = SetChargeLimitRequest{}
	mi := &file_powergrid_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetChargeLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChargeLimitRequest) ProtoMessage() {}

func (x *SetChargeLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_powergrid_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChargeLimitRequest.ProtoReflect.Descriptor instead.
func (*SetChargeLimitRequest) Descriptor() ([]byte, []int) {
	return file_powergrid_proto_rawDescGZIP(), []int{2}
}

func (x *SetChargeLimitRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SetPowerFeatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Feature       PowerFeature           `protobuf:"varint,1,opt,name=feature,proto3,enum=rpc.PowerFeature" json:"feature,omitempty"`
	Enable        bool                   `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPowerFeatureRequest) Reset() {
	*x = SetPowerFeatureRequest{}
	mi := &file_powergrid_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPowerFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPowerFeatureRequest) ProtoMessage() {}

func (x *SetPowerFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_powergrid_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPowerFeatureRequest.ProtoReflect.Descriptor instead.
func (*SetPowerFeatureRequest) Descriptor() ([]byte, []int) {
	return file_powergrid_proto_rawDescGZIP(), []int{3}
}

func (x *SetPowerFeatureRequest) GetFeature() PowerFeature {
	if x != nil {
		return x.Feature
	}
	return PowerFeature_POWER_FEATURE_UNSPECIFIED
}

func (x *SetPowerFeatureRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

var File_powergrid_proto protoreflect.FileDescriptor

const file_powergrid_proto_rawDesc = "" +
	"\n" +
	"\x0fpowergrid.proto\x12\x03rpc\"\a\n" +
	"\x05Empty\"\xbb\x06\n" +
	"\x0eStatusResponse\x12%\n" +
	"\x0ecurrent_charge\x18\x01 \x01(\x05R\rcurrentCharge\x12\x1f\n" +
	"\vis_charging\x18\x02 \x01(\bR\n" +
	"isCharging\x12!\n" +
	"\fis_connected\x18\x03 \x01(\bR\visConnected\x12!\n" +
	"\fcharge_limit\x18\x04 \x01(\x05R\vchargeLimit\x12*\n" +
	"\x11is_charge_limited\x18\x05 \x01(\bR\x0fisChargeLimited\x12\x1f\n" +
	"\vcycle_count\x18\x06 \x01(\x05R\n" +
	"cycleCount\x12/\n" +
	"\x13adapter_description\x18\a \x01(\tR\x12adapterDescription\x12'\n" +
	"\x0fbattery_wattage\x18\b \x01(\x02R\x0ebatteryWattage\x12'\n" +
	"\x0fadapter_wattage\x18\t \x01(\x02R\x0eadapterWattage\x12%\n" +
	"\x0esystem_wattage\x18\n" +
	" \x01(\x02R\rsystemWattage\x12\"\n" +
	"\rhealth_by_max\x18\v \x01(\x05R\vhealthByMax\x122\n" +
	"\x15adapter_input_voltage\x18\f \x01(\x02R\x13adapterInputVoltage\x124\n" +
	"\x16adapter_input_amperage\x18\r \x01(\x02R\x14adapterInputAmperage\x12?\n" +
	"\x1cprevent_display_sleep_active\x18\x0e \x01(\bR\x19preventDisplaySleepActive\x12=\n" +
	"\x1bprevent_system_sleep_active\x18\x0f \x01(\bR\x18preventSystemSleepActive\x124\n" +
	"\x16force_discharge_active\x18\x10 \x01(\bR\x14forceDischargeActive\x120\n" +
	"\x14smc_charging_enabled\x18\x11 \x01(\bR\x12smcChargingEnabled\x12.\n" +
	"\x13smc_adapter_enabled\x18\x12 \x01(\bR\x11smcAdapterEnabled\"-\n" +
	"\x15SetChargeLimitRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"]\n" +
	"\x16SetPowerFeatureRequest\x12+\n" +
	"\afeature\x18\x01 \x01(\x0e2\x11.rpc.PowerFeatureR\afeature\x12\x16\n" +
	"\x06enable\x18\x02 \x01(\bR\x06enable*w\n" +
	"\fPowerFeature\x12\x1d\n" +
	"\x19POWER_FEATURE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PREVENT_DISPLAY_SLEEP\x10\x01\x12\x18\n" +
	"\x14PREVENT_SYSTEM_SLEEP\x10\x02\x12\x13\n" +
	"\x0fFORCE_DISCHARGE\x10\x032\xaf\x01\n" +
	"\tPowerGrid\x12,\n" +
	"\tGetStatus\x12\n" +
	".rpc.Empty\x1a\x13.rpc.StatusResponse\x128\n" +
	"\x0eSetChargeLimit\x12\x1a.rpc.SetChargeLimitRequest\x1a\n" +
	".rpc.Empty\x12:\n" +
	"\x0fSetPowerFeature\x12\x1b.rpc.SetPowerFeatureRequest\x1a\n" +
	".rpc.EmptyB\x18Z\x16powergrid/internal/rpcb\x06proto3"

var (
	file_powergrid_proto_rawDescOnce sync.Once
	file_powergrid_proto_rawDescData []byte
)

func file_powergrid_proto_rawDescGZIP() []byte {
	file_powergrid_proto_rawDescOnce.Do(func() {
		file_powergrid_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_powergrid_proto_rawDesc), len(file_powergrid_proto_rawDesc)))
	})
	return file_powergrid_proto_rawDescData
}

var file_powergrid_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_powergrid_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_powergrid_proto_goTypes = []any{
	(PowerFeature)(0),              // 0: rpc.PowerFeature
	(*Empty)(nil),                  // 1: rpc.Empty
	(*StatusResponse)(nil),         // 2: rpc.StatusResponse
	(*SetChargeLimitRequest)(nil),  // 3: rpc.SetChargeLimitRequest
	(*SetPowerFeatureRequest)(nil), // 4: rpc.SetPowerFeatureRequest
}
var file_powergrid_proto_depIdxs = []int32{
	0, // 0: rpc.SetPowerFeatureRequest.feature:type_name -> rpc.PowerFeature
	1, // 1: rpc.PowerGrid.GetStatus:input_type -> rpc.Empty
	3, // 2: rpc.PowerGrid.SetChargeLimit:input_type -> rpc.SetChargeLimitRequest
	4, // 3: rpc.PowerGrid.SetPowerFeature:input_type -> rpc.SetPowerFeatureRequest
	2, // 4: rpc.PowerGrid.GetStatus:output_type -> rpc.StatusResponse
	1, // 5: rpc.PowerGrid.SetChargeLimit:output_type -> rpc.Empty
	1, // 6: rpc.PowerGrid.SetPowerFeature:output_type -> rpc.Empty
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_powergrid_proto_init() }
func file_powergrid_proto_init() {
	if File_powergrid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_powergrid_proto_rawDesc), len(file_powergrid_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_powergrid_proto_goTypes,
		DependencyIndexes: file_powergrid_proto_depIdxs,
		EnumInfos:         file_powergrid_proto_enumTypes,
		MessageInfos:      file_powergrid_proto_msgTypes,
	}.Build()
	File_powergrid_proto = out.File
	file_powergrid_proto_goTypes = nil
	file_powergrid_proto_depIdxs = nil
}
